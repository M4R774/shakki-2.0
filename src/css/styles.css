* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --board-size: min(85vw, 85vh);
    --square-size: calc(var(--board-size) / 16);
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: linear-gradient(135deg, #1a1f24 0%, #121518 100%);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    padding: 10px;
    color: #e4e6eb;
}

.game-container {
    display: flex;
    flex-direction: column;
    gap: 15px;
    background: linear-gradient(145deg, #242830, #1e2228);
    padding: 15px;
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    width: 100%;
    max-width: var(--board-size);
    height: auto;
}

.game-header {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.controls-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 10px;
}

.setup-controls {
    display: flex;
    gap: 8px;
    align-items: center;
}

.setup-controls label {
    font-size: 0.9em;
}

.setup-controls select {
    padding: 5px;
    border-radius: 5px;
    background: #2d3139;
    color: white;
    border: 1px solid #3a4149;
}

.control-button {
    padding: 8px 12px;
    border: none;
    border-radius: 5px;
    background: #2d3139;
    color: white;
    cursor: pointer;
    transition: all 0.2s ease;
}

.control-button:hover {
    background: #3a4149;
    transform: translateY(-2px);
}

.sound-controls {
    display: flex;
    gap: 8px;
}

.turn-indicator {
    font-size: 1.2rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 10px;
    border-radius: 8px;
    background: #2d3139;
    text-align: center;
}

.turn-indicator.white {
    background: linear-gradient(145deg, #ffffff, #f8f9fa);
    color: #2c3e50;
    border: 2px solid #e9ecef;
}

.turn-indicator.black {
    background: linear-gradient(145deg, #2c3e50, #34495e);
    color: #ffffff;
}

.turn-indicator.red {
    background: linear-gradient(145deg, #ff6b6b, #fa5252);
    color: #ffffff;
}

.turn-indicator.blue {
    background: linear-gradient(145deg, #339af0, #228be6);
    color: #ffffff;
}

.captured-pieces {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-top: 10px;
}

.captured-container {
    background: linear-gradient(145deg, #ffffff, #f5f5f5);
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.captured-label {
    font-size: 1.2em;
    font-weight: bold;
    color: #333;
    margin-bottom: 10px;
    text-transform: uppercase;
    letter-spacing: 1px;
}

.captured-white, .captured-black, .captured-red, .captured-blue {
    display: flex;
    flex-wrap: wrap;
    gap: 2px;
    min-height: 30px;
    padding: 5px;
    border: 1px solid #ccc;
    border-radius: 4px;
    background-color: rgba(255, 255, 255, 0.1);
}

.captured-red .piece {
    color: #ff0000;
}

.chessboard {
    display: grid;
    grid-template-columns: repeat(16, 1fr);
    width: 100%;
    aspect-ratio: 1/1;
    margin: 0 auto;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
    position: relative;
    background: #242830;
}

.square {
    width: var(--square-size);
    height: var(--square-size);
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
    transition: transform 0.2s ease;
    transform-style: preserve-3d;
    transform: translateZ(0);
    backface-visibility: hidden;
    will-change: transform;
}

.square .piece {
    position: absolute;
}

/* Base colors for squares */
.square.white {
    background-color: #d2a679;
}

.square.black {
    background-color: #8b5e3c;
}

/* Move indicators */
.square.valid-move::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: min(24px, 4vw);
    height: min(24px, 4vw);
    background-color: rgba(0, 255, 0, 0.3);
    border: 2px solid rgba(0, 255, 0, 0.5);
    border-radius: 50%;
    z-index: 2;
    pointer-events: none;
}

/* Capture indicators */
.square.valid-capture::after {
    content: '';
    position: absolute;
    inset: 0;
    border: 3px solid rgba(255, 0, 0, 0.5);
    z-index: 2;
    pointer-events: none;
    box-sizing: border-box;
}

/* Hover states */
.square:hover:not(.fog):not(.selected) {
    transform: scale(1.05) translateZ(0);
    z-index: 100;
}

.square:not(:hover) {
    transform: translateZ(0);
    transition: transform 0.2s ease;
}

/* Selected state */
.square.selected {
    background: radial-gradient(circle, rgba(116, 185, 255, 0.4) 0%, rgba(116, 185, 255, 0.8) 100%) !important;
    transform: scale(1.05) translateZ(0);
    z-index: 100;
    box-shadow: 0 0 20px rgba(116, 185, 255, 0.6);
}

/* Ensure content stays visible */
.square > * {
    transform-style: preserve-3d;
    backface-visibility: hidden;
}

.square::before,
.square::after {
    transform: translateZ(1px);
    backface-visibility: hidden;
}

/* Terrain styles */
.square.forest {
    background: linear-gradient(to bottom, #1e3b1a 0%, #2a4a24 100%) !important;
    box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.3);
}

.square.water {
    background: linear-gradient(45deg, #1a4b82 0%, #2666b0 50%, #1a4b82 100%) !important;
    box-shadow: inset 0 0 20px rgba(255, 255, 255, 0.2);
    position: relative;
    overflow: hidden;
}

.square.goodie-hut {
    position: relative;
    box-shadow: inset 0 0 15px rgba(255, 255, 255, 0.2);
}

.square.goodie-hut::before {
    content: 'üèïÔ∏è';
    font-size: 30px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.3));
}

/* Fog of war styling */
.square.fog:not(.explored) {
    background-color: #0a0a0a !important;
}

.square.fog.explored.white {
    background-color: #3a4149 !important;
}

.square.fog.explored.black {
    background-color: #2d3139 !important;
}

/* Z-index layering */
.square::before {
    z-index: 3;
}

.square.selected {
    z-index: 4;
}

.square.valid-move::after {
    z-index: 5;
}

.square.fog::after {
    z-index: 6;
}

.square.valid-move::after {
    content: "";
    position: absolute;
    width: 24px;
    height: 24px;
    background: radial-gradient(circle, rgba(116, 185, 255, 0.8) 0%, rgba(116, 185, 255, 0.3) 100%);
    border-radius: 50%;
    border: 2px solid rgba(255, 255, 255, 0.9);
    box-shadow: 0 0 10px rgba(116, 185, 255, 0.4);
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0% { transform: scale(0.95); opacity: 0.8; }
    50% { transform: scale(1.05); opacity: 1; }
    100% { transform: scale(0.95); opacity: 0.8; }
}

.square.fog {
    position: relative;
}

/* Fog of war styling improvements */
.square.fog:not(.explored) {
    background-color: #0a0a0a !important;
}

.square.fog:not(.explored)::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at center, rgba(0, 0, 0, 0.85) 0%, rgba(0, 0, 0, 0.95) 100%);
    box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.9);
    z-index: 4;
}

/* Explored squares */
.square.fog.explored {
    position: relative;
    filter: grayscale(0.8) brightness(0.5);
}

.square.fog.explored.forest,
.square.fog.explored.water {
    filter: grayscale(0.9) brightness(0.4);
}

.square.fog.explored.forest::before,
.square.fog.explored.water::before {
    opacity: 0.3;
}

/* Regular terrain styles */
.square.forest::before {
    content: attr(data-variant);
    font-size: 35px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.3));
}

.square.mountain::before {
    content: attr(data-variant);
    font-size: 35px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.3));
}

.square.goodie-hut {
    position: relative;
}

.square.goodie-hut::before {
    content: 'üèïÔ∏è';
    font-size: 30px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.3));
}

/* Remove any existing yellow background styles */
.square.goodie-hut {
    box-shadow: inset 0 0 15px rgba(255, 255, 255, 0.2);
}

/* Remove the old variant-specific styles since we're using data-variant directly */
.square.forest[data-variant="0"]::before,
.square.forest[data-variant="1"]::before,
.square.forest[data-variant="2"]::before,
.square.mountain[data-variant="0"]::before,
.square.mountain[data-variant="1"]::before,
.square.mountain[data-variant="2"]::before {
    content: attr(data-variant);
}

.square.forest::after {
    content: '';
    position: absolute;
    bottom: 25%;
    left: 50%;
    transform: translateX(-50%);
    width: 4px;
    height: 8px;
    background-color: #4a3728;
}

.square.forest:nth-child(2n)::before {
    --tree-rotation: 15deg;
}

.square.forest:nth-child(3n)::before {
    --tree-rotation: -10deg;
}

.square.water::before,
.square.water::after {
    content: '';
    position: absolute;
    width: 200%;
    height: 100%;
    top: 0;
    left: -50%;
    background: linear-gradient(
        90deg,
        transparent 0%,
        transparent 20%,
        rgba(255, 255, 255, 0.1) 45%,
        rgba(255, 255, 255, 0.2) 50%,
        rgba(255, 255, 255, 0.1) 55%,
        transparent 80%,
        transparent 100%
    );
    animation: waterFlow 12s linear infinite;
    transform-origin: center center;
}

.square.water::after {
    animation-delay: -6s;
    opacity: 0.5;
}

.square.mountain {
    background: linear-gradient(45deg, #4a4a4a 0%, #6a6a6a 50%, #4a4a4a 100%) !important;
    box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.4);
    position: relative;
}

.square.mountain::before {
    content: attr(data-variant);
    font-size: 35px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.3));
}

.square.mountain[data-variant="0"]::before {
    content: '‚õ∞Ô∏è';
}

.square.mountain[data-variant="1"]::before {
    content: 'üèîÔ∏è';
}

.square.mountain[data-variant="2"]::before {
    content: 'üóª';
}

@keyframes waterFlow {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

/* Fog of war styling improvements */
.square.fog.explored.forest,
.square.fog.explored.water,
.square.fog.explored.mountain {
    filter: grayscale(0.9) brightness(0.4);
}

.square.fog.explored.forest::before,
.square.fog.explored.water::before,
.square.fog.explored.mountain::before,
.square.fog.explored.forest::after,
.square.fog.explored.water::after,
.square.fog.explored.mountain::after {
    opacity: 0.3;
}

/* Add sliding animation for pieces */
@keyframes slidePiece {
    0% {
        transform: translate(-50%, -50%);
    }
    100% {
        transform: translate(calc(-50% + var(--offset-x)), calc(-50% + var(--offset-y)));
    }
}

.piece {
    width: calc(var(--square-size) * 0.8);
    height: calc(var(--square-size) * 0.8);
    position: absolute;
    cursor: pointer;
    user-select: none;
    font-size: calc(var(--square-size) * 0.7) !important;
    z-index: 10;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    justify-content: center;
    align-items: center;
    transition: transform 0.2s ease;
    will-change: transform;
}

/* Piece colors and outlines */
.piece[data-color="white"] {
    color: #ffffff !important;
    text-shadow: 
        -1px -1px 0 #000,
        1px -1px 0 #000,
        -1px 1px 0 #000,
        1px 1px 0 #000;
}

.piece[data-color="black"] {
    color: #000000 !important;
    text-shadow: 
        -1px -1px 0 #fff,
        1px -1px 0 #fff,
        -1px 1px 0 #fff,
        1px 1px 0 #fff;
}

.piece[data-color="red"] {
    color: #ff3333 !important;
    text-shadow: 
        -1px -1px 0 #000,
        1px -1px 0 #000,
        -1px 1px 0 #000,
        1px 1px 0 #000;
}

.piece[data-color="blue"] {
    color: #3333ff !important;
    text-shadow: 
        -1px -1px 0 #000,
        1px -1px 0 #000,
        -1px 1px 0 #000,
        1px 1px 0 #000;
}

.piece:hover {
    transform: translate(-50%, -50%) scale(1.1);
}

/* Game message styling */
.game-message {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: #2c2c2c;
    color: white;
    padding: 15px 30px;
    border-radius: 8px;
    z-index: 1000;
    display: flex;
    align-items: center;
    gap: 10px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    min-width: 300px;
    margin-top: 10px;
    pointer-events: none;
}

.message-container {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
    gap: 10px;
    z-index: 1000;
    pointer-events: none;
}

.game-message.reward {
    background: linear-gradient(135deg, #2ecc71, #27ae60);
}

.game-message.warning {
    background: linear-gradient(135deg, #e74c3c, #c0392b);
}

.message-icon {
    font-size: 24px;
}

.message-text {
    flex: 1;
}

@keyframes slideInDown {
    from {
        transform: translate(-50%, -100%);
        opacity: 0;
    }
    to {
        transform: translate(-50%, 0);
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

/* Update responsive design */
@media (max-width: 1200px) {
    :root {
        --board-size: min(85vw, 80vh);
    }
    
    .game-container {
        padding: 10px;
    }
}

@media (max-width: 768px) {
    :root {
        --board-size: min(95vw, 80vh);
    }
    
    .tech-container {
        flex-direction: column;
    }
    
    .tech-tree {
        margin-bottom: 20px;
    }

    .game-description {
        padding: 15px 20px;
    }

    .game-description h2 {
        font-size: 1.2em;
    }

    .game-description p,
    .game-description li {
        font-size: 1em;
    }
}

/* iPhone and other mobile devices */
@media (max-width: 480px) {
    :root {
        --board-size: 95vw;
    }

    body {
        padding: 5px;
        min-height: 100vh;
        align-items: flex-start;
        padding-top: 10px;
    }

    .game-container {
        padding: 8px;
        width: var(--board-size);
        gap: 8px;
        margin-bottom: 20px;
    }

    .chessboard {
        display: grid;
        grid-template-columns: repeat(16, 1fr);
        grid-template-rows: repeat(16, 1fr);
        width: 100%;
        aspect-ratio: 16/20;
        gap: 0;
    }

    .square {
        width: 100%;
        height: 100%;
        aspect-ratio: auto;
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .piece {
        font-size: calc(var(--board-size) / 22) !important;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .square.goodie-hut::before,
    .square.forest::before,
    .square.water::before {
        font-size: calc(var(--board-size) / 25) !important;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 80%;
        height: 80%;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .turn-indicator {
        font-size: 0.9rem;
        padding: 6px;
    }

    .control-button {
        padding: 6px 8px;
        font-size: 0.8em;
    }

    .setup-controls label {
        font-size: 0.8em;
    }

    .game-message {
        min-width: auto;
        width: 90vw;
        padding: 10px 15px;
        font-size: 0.9em;
    }

    .controls-container {
        gap: 5px;
    }

    .square.mountain::before {
        font-size: calc(var(--board-size) / 30) !important;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 80%;
        height: 80%;
        display: flex;
        justify-content: center;
        align-items: center;
    }
}

/* Landscape mode and 1080p monitors */
@media (max-height: 1080px) and (min-width: 1200px) {
    :root {
        --board-size: 75vh;
    }

    body {
        align-items: flex-start;
        padding-top: 20px;
    }

    .game-container {
        padding: 15px;
        margin-bottom: 20px;
        width: var(--board-size);
    }

    .chessboard {
        width: 100%;
        aspect-ratio: 1/1;
    }

    .square {
        width: 100%;
        height: 100%;
    }
}

@media (max-height: 600px) and (orientation: landscape) {
    :root {
        --board-size: 80vh;
    }

    .game-container {
        padding: 5px;
    }

    .game-header {
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        gap: 5px;
    }

    .turn-indicator {
        flex: 1;
        margin-right: 5px;
        font-size: 0.9rem;
        padding: 5px;
    }

    .square {
        height: calc(var(--square-size) * 0.8);
    }
}

/* Moved piece styling */
.piece.moved {
    opacity: 0.5 !important;
    filter: brightness(60%) grayscale(50%) !important;
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 50%;
}

/* End turn button blinking animation */
@keyframes blink {
    0% { transform: scale(1); box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3); }
    50% { transform: scale(1.05); box-shadow: 0 6px 20px rgba(76, 175, 80, 0.6); }
    100% { transform: scale(1); box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3); }
}

.end-turn-button.blink {
    animation: blink 1s ease-in-out infinite;
}

/* Add fade-in animation for turn transition */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.turn-transition {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #000000;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    color: white;
    text-align: center;
    animation: fadeIn 0.5s ease-out;
}

.turn-transition h2 {
    font-size: 3em;
    margin-bottom: 30px;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
}

.turn-transition p {
    font-size: 1.2em;
    margin-bottom: 20px;
    opacity: 0.8;
}

.turn-transition button {
    font-size: 1.3em;
    padding: 15px 40px;
    background: linear-gradient(145deg, #4CAF50, #45a049);
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
    transition: all 0.3s ease;
}

.turn-transition button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4);
}

.turn-transition::before {
    content: '';
    width: 60px;
    height: 60px;
    border-radius: 10px;
    margin-bottom: 30px;
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
}

.turn-transition.white::before {
    background-color: #ffffff;
}

.turn-transition.black::before {
    background-color: #000000;
    border: 2px solid #ffffff;
}

.turn-transition.red::before {
    background-color: #ff3333;
}

.turn-transition.blue::before {
    background-color: #3333ff;
}

.piece.moving {
    position: fixed;
    z-index: 1000;
    pointer-events: none;
    animation: slidePiece 0.3s ease-out forwards;
}

/* Ensure the clone piece is properly centered */
.piece-clone {
    position: fixed;
    z-index: 1000;
    pointer-events: none;
    transform: translate(-50%, -50%);
}

/* End turn button adjustments */
.end-turn-button {
    padding: 8px 16px;
    font-size: 1em;
    margin-top: 10px;
}

.game-description {
    background: rgba(36, 40, 48, 0.8);
    border-radius: 12px;
    padding: 20px 30px;
    margin-top: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.game-description h2 {
    color: #e4e6eb;
    font-size: 1.4em;
    margin-bottom: 15px;
    text-align: center;
}

.game-description p {
    color: #e4e6eb;
    margin: 12px 0;
    font-size: 1.1em;
}

.game-description ul {
    list-style-position: inside;
    padding-left: 20px;
    margin: 10px 0;
}

.game-description li {
    color: #b0b3b8;
    margin: 8px 0;
    line-height: 1.4;
    position: relative;
    padding-left: 15px;
}

.game-description li::before {
    content: "‚Ä¢";
    color: #4e89ae;
    position: absolute;
    left: -5px;
}
